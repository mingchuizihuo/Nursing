<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idea.nursing.order.web.dao.ServiceOrderMapper" >
  <resultMap id="BaseResultMap" type="com.idea.nursing.order.web.domain.pojo.ServiceOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_type" property="orderType" jdbcType="TINYINT" />
    <result column="package_service_id" property="packageServiceId" jdbcType="BIGINT" />
    <result column="client_id" property="clientId" jdbcType="BIGINT" />
    <result column="agency_id" property="agencyId" jdbcType="BIGINT" />
    <result column="order_date" property="orderDate" jdbcType="TIMESTAMP" />
    <result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
    <result column="accept_service_date" property="acceptServiceDate" jdbcType="TIMESTAMP" />
    <result column="service_end_date" property="serviceEndDate" jdbcType="TIMESTAMP" />
    <result column="service_start_date" property="serviceStartDate" jdbcType="TIMESTAMP" />
    <result column="contact_id" property="contactId" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="insurance_id" property="insuranceId" jdbcType="BIGINT" />
    <result column="service_count" property="serviceCount" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_type, package_service_id, client_id, agency_id, order_date, pay_date, accept_service_date, 
    service_end_date, service_start_date, contact_id, price, insurance_id, service_count, 
    message
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.idea.nursing.order.web.domain.pojo.ServiceOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dd_service_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from dd_service_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dd_service_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.idea.nursing.order.web.domain.pojo.ServiceOrderExample" >
    delete from dd_service_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.idea.nursing.order.web.domain.pojo.ServiceOrder" useGeneratedKeys="true" keyProperty="id" >
    insert into dd_service_order (order_type, package_service_id, client_id, 
      agency_id, order_date, pay_date, 
      accept_service_date, service_end_date, 
      service_start_date, contact_id, price, 
      insurance_id, service_count, message
      )
    values (#{orderType,jdbcType=TINYINT}, #{packageServiceId,jdbcType=BIGINT}, #{clientId,jdbcType=BIGINT}, 
      #{agencyId,jdbcType=BIGINT}, #{orderDate,jdbcType=TIMESTAMP}, #{payDate,jdbcType=TIMESTAMP}, 
      #{acceptServiceDate,jdbcType=TIMESTAMP}, #{serviceEndDate,jdbcType=TIMESTAMP}, 
      #{serviceStartDate,jdbcType=TIMESTAMP}, #{contactId,jdbcType=BIGINT}, #{price,jdbcType=BIGINT}, 
      #{insuranceId,jdbcType=BIGINT}, #{serviceCount,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.idea.nursing.order.web.domain.pojo.ServiceOrder" useGeneratedKeys="true" keyProperty="id" >
    insert into dd_service_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="packageServiceId != null" >
        package_service_id,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="agencyId != null" >
        agency_id,
      </if>
      <if test="orderDate != null" >
        order_date,
      </if>
      <if test="payDate != null" >
        pay_date,
      </if>
      <if test="acceptServiceDate != null" >
        accept_service_date,
      </if>
      <if test="serviceEndDate != null" >
        service_end_date,
      </if>
      <if test="serviceStartDate != null" >
        service_start_date,
      </if>
      <if test="contactId != null" >
        contact_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="insuranceId != null" >
        insurance_id,
      </if>
      <if test="serviceCount != null" >
        service_count,
      </if>
      <if test="message != null" >
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderType != null" >
        #{orderType,jdbcType=TINYINT},
      </if>
      <if test="packageServiceId != null" >
        #{packageServiceId,jdbcType=BIGINT},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=BIGINT},
      </if>
      <if test="agencyId != null" >
        #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="orderDate != null" >
        #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payDate != null" >
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptServiceDate != null" >
        #{acceptServiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceEndDate != null" >
        #{serviceEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceStartDate != null" >
        #{serviceStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contactId != null" >
        #{contactId,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="insuranceId != null" >
        #{insuranceId,jdbcType=BIGINT},
      </if>
      <if test="serviceCount != null" >
        #{serviceCount,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.idea.nursing.order.web.domain.pojo.ServiceOrderExample" resultType="java.lang.Integer" >
    select count(*) from dd_service_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dd_service_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=TINYINT},
      </if>
      <if test="record.packageServiceId != null" >
        package_service_id = #{record.packageServiceId,jdbcType=BIGINT},
      </if>
      <if test="record.clientId != null" >
        client_id = #{record.clientId,jdbcType=BIGINT},
      </if>
      <if test="record.agencyId != null" >
        agency_id = #{record.agencyId,jdbcType=BIGINT},
      </if>
      <if test="record.orderDate != null" >
        order_date = #{record.orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payDate != null" >
        pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.acceptServiceDate != null" >
        accept_service_date = #{record.acceptServiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceEndDate != null" >
        service_end_date = #{record.serviceEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceStartDate != null" >
        service_start_date = #{record.serviceStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contactId != null" >
        contact_id = #{record.contactId,jdbcType=BIGINT},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.insuranceId != null" >
        insurance_id = #{record.insuranceId,jdbcType=BIGINT},
      </if>
      <if test="record.serviceCount != null" >
        service_count = #{record.serviceCount,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dd_service_order
    set id = #{record.id,jdbcType=BIGINT},
      order_type = #{record.orderType,jdbcType=TINYINT},
      package_service_id = #{record.packageServiceId,jdbcType=BIGINT},
      client_id = #{record.clientId,jdbcType=BIGINT},
      agency_id = #{record.agencyId,jdbcType=BIGINT},
      order_date = #{record.orderDate,jdbcType=TIMESTAMP},
      pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      accept_service_date = #{record.acceptServiceDate,jdbcType=TIMESTAMP},
      service_end_date = #{record.serviceEndDate,jdbcType=TIMESTAMP},
      service_start_date = #{record.serviceStartDate,jdbcType=TIMESTAMP},
      contact_id = #{record.contactId,jdbcType=BIGINT},
      price = #{record.price,jdbcType=BIGINT},
      insurance_id = #{record.insuranceId,jdbcType=BIGINT},
      service_count = #{record.serviceCount,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.idea.nursing.order.web.domain.pojo.ServiceOrder" >
    update dd_service_order
    <set >
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=TINYINT},
      </if>
      <if test="packageServiceId != null" >
        package_service_id = #{packageServiceId,jdbcType=BIGINT},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=BIGINT},
      </if>
      <if test="agencyId != null" >
        agency_id = #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="orderDate != null" >
        order_date = #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payDate != null" >
        pay_date = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptServiceDate != null" >
        accept_service_date = #{acceptServiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceEndDate != null" >
        service_end_date = #{serviceEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceStartDate != null" >
        service_start_date = #{serviceStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contactId != null" >
        contact_id = #{contactId,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="insuranceId != null" >
        insurance_id = #{insuranceId,jdbcType=BIGINT},
      </if>
      <if test="serviceCount != null" >
        service_count = #{serviceCount,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idea.nursing.order.web.domain.pojo.ServiceOrder" >
    update dd_service_order
    set order_type = #{orderType,jdbcType=TINYINT},
      package_service_id = #{packageServiceId,jdbcType=BIGINT},
      client_id = #{clientId,jdbcType=BIGINT},
      agency_id = #{agencyId,jdbcType=BIGINT},
      order_date = #{orderDate,jdbcType=TIMESTAMP},
      pay_date = #{payDate,jdbcType=TIMESTAMP},
      accept_service_date = #{acceptServiceDate,jdbcType=TIMESTAMP},
      service_end_date = #{serviceEndDate,jdbcType=TIMESTAMP},
      service_start_date = #{serviceStartDate,jdbcType=TIMESTAMP},
      contact_id = #{contactId,jdbcType=BIGINT},
      price = #{price,jdbcType=BIGINT},
      insurance_id = #{insuranceId,jdbcType=BIGINT},
      service_count = #{serviceCount,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>